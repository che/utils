#!/bin/bash

USB_CRYPT_DEV="${USB_CRYPT_DEV:=$1}"
USB_CRYPT_DEV="sd${USB_CRYPT_DEV:=b1}"
USB_CRYPT_NAME="usb_crypt_dev_${USB_CRYPT_DEV}"
USB_MOUNT_DIR="/mnt/${USB_CRYPT_NAME}"
USB_DEV_MAPPER="/dev/mapper/${USB_CRYPT_NAME}"


cryptsetup_check()
{
    cryptsetup --version > /dev/null
    CURRENT_EXIT_STATUS="$?"
    if [ ! $CURRENT_EXIT_STATUS -eq 0 ]
    then
        echo "ERROR: Please, install 'cryptsetup'"
        exit 1
    fi
}

usb_mapper_kill_proccesses()
{
    local usb_mapper_pids=""

    for i in $(lsof -Fp $USB_MOUNT_DIR 2>/dev/null)
    do
        usb_mapper_pids="$usb_mapper_pids ${i/p/}"
    done

    if [ -z "$usb_mapper_pids" ]
    then
        umount -l $USB_MOUNT_DIR
        echo "WARNING: '${USB_MOUNT_DIR}' has been unmounted lazily"
    else
        echo "WARNING: Killing proccesses${usb_mapper_pids} for '$USB_MOUNT_DIR'"
        kill -9 $usb_mapper_pids
        usb_mapper_umount
    fi
}

usb_mapper_umount()
{
    if [ -e $USB_MOUNT_DIR ]
    then
        umount $USB_MOUNT_DIR
        CURRENT_EXIT_STATUS="$?"
        if [ $CURRENT_EXIT_STATUS -eq 0 ]
        then
            echo "'${USB_MOUNT_DIR}' has been unmounted"
            rm -rf $USB_MOUNT_DIR
        else
            echo "ERROR: '${USB_MOUNT_DIR}' has been not unmounted correctly"
            usb_mapper_kill_proccesses
        fi
    else
        echo "WARNING: '${USB_MOUNT_DIR}' does not exists"
    fi
}

usb_luks_close()
{
    if [ -e $USB_DEV_MAPPER ]
    then
        cryptsetup luksClose $USB_DEV_MAPPER
        CURRENT_EXIT_STATUS="$?"
        if [ $CURRENT_EXIT_STATUS -eq 0 ]
        then
            echo "'${USB_DEV_MAPPER}' has been closed"
            rm -rf $USB_MOUNT_DIR
        else
            echo "ERROR: '${USB_DEV_MAPPER}' has been not closed"
        fi
        exit $CURRENT_EXIT_STATUS
    else
        echo "WARNING: '${USB_DEV_MAPPER}' does not exists"
        exit 0
    fi
}


cryptsetup_check
usb_mapper_umount
usb_luks_close
